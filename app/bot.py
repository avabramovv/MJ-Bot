import telebot
from telebot import types

from texhandler import *

from pylatex import Document

from entities_handler import ent2latex, only_quots

import shutil

bot = telebot.TeleBot('6120587308:AAGy1kJpZM3v9JFwqMaJhI1NUjuxRTTeUdo')
print('Bot started.\nPress Ctr-C to terminate the proccess\n')

users = {}

def start_reply_kb():
    reply_kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_yes = types.KeyboardButton(text='–î–∞')
    btn_no = types.KeyboardButton(text='–ù–µ—Ç')

    reply_kb.add(btn_yes, btn_no)

    return reply_kb

def type_reply_kb():
    reply_kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_issl = types.KeyboardButton(text='–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π')
    btn_prog = types.KeyboardButton(text='–ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π')

    reply_kb.add(btn_issl, btn_prog)

    return reply_kb

@bot.callback_query_handler(func=lambda callback: callback.data)
def check_choice(callback):
    if callback.data == 'doc_name':
        bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞')
        bot.register_next_step_handler(callback.message, change_doc_name)
    elif callback.data == 'doc_font_size':
        bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ (pt)')
        bot.register_next_step_handler(callback.message, change_doc_font_size)
    elif callback.data == 'doc_geometry':
        bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏ —Ä–∞–∑–º–µ—Ä—ã –ø–æ–ª–µ–π <i><b>—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª</b></i>\n(–ª–µ–≤–æ–µ –ø—Ä–∞–≤–æ–µ –≤–µ—Ä—Ö–Ω–µ–µ –Ω–∏–∂–Ω–µ–µ)', parse_mode='HTML')
        bot.register_next_step_handler(callback.message, change_doc_geometry)
    elif callback.data == 'online':
        users["{0}".format(callback.message.chat.id)].bib_refs.append(BibOnline())

        curr_bib = users["{0}".format(callback.message.chat.id)].bib_refs[-1]

        bot.send_message(callback.message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</b> –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>chirkova18_arxiv</i>', parse_mode='HTML')
        bot.register_next_step_handler(callback.message, bib_set_label, curr_bib)
    elif callback.data == 'book':
        users["{0}".format(callback.message.chat.id)].bib_refs.append(BibBook())

        curr_bib = users["{0}".format(callback.message.chat.id)].bib_refs[-1]

        bot.send_message(callback.message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</b> –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>chirkova18_arxiv</i>', parse_mode='HTML')
        bot.register_next_step_handler(callback.message, bib_set_label, curr_bib)
    elif callback.data == 'inbook':
        users["{0}".format(callback.message.chat.id)].bib_refs.append(BibInbook())

        curr_bib = users["{0}".format(callback.message.chat.id)].bib_refs[-1]

        bot.send_message(callback.message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</b> –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>chirkova18_arxiv</i>', parse_mode='HTML')
        bot.register_next_step_handler(callback.message, bib_set_label, curr_bib)
    elif callback.data == 'article':
        users["{0}".format(callback.message.chat.id)].bib_refs.append(BibArticle())

        curr_bib = users["{0}".format(callback.message.chat.id)].bib_refs[-1]

        bot.send_message(callback.message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</b> –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>chirkova18_arxiv</i>', parse_mode='HTML')
        bot.register_next_step_handler(callback.message, bib_set_label, curr_bib)
    
def change_doc_name(message):
    # name : string
    users["{0}".format(message.chat.id)].default_filepath_ = message.text
    bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, is_change)

def change_doc_font_size(message):
    # size : string, int
    size = message.text
    users["{0}".format(message.chat.id)].font_size_ = f'{size}pt'
    bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, is_change)

def change_doc_geometry(message):
    # all : int
    l = list(map(int, message.text.split()))
    left = l[0]
    right = l[1]
    top = l[2]
    bottom = l[3]

    users["{0}".format(message.chat.id)].geometry_options_ = {
                   'left': f'{left}mm',
                   'right': f'{right}mm',
                   'top': f'{top}mm',
                   'bottom': f'{bottom}mm'}
    
    bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, is_change)

def add_dirs(message):
    print('Adding dirs...')

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É, –≥–¥–µ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    usr_dir_path = 'users/dir-' + str(message.chat.id)
    os.mkdir(usr_dir_path)

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É, –≥–¥–µ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    usr_graphics_path = os.path.join(usr_dir_path, 'graphics')
    os.mkdir(usr_graphics_path)

    users["{0}".format(message.chat.id)].default_filepath_ = usr_dir_path
    users["{0}".format(message.chat.id)].title_name_ = os.path.join(usr_dir_path, 'title')
    users["{0}".format(message.chat.id)].chat_id = message.chat.id
    users["{0}".format(message.chat.id)].path = usr_dir_path
    users["{0}".format(message.chat.id)].graphics_path = usr_graphics_path
    users["{0}".format(message.chat.id)].bib_path = os.path.join(usr_dir_path, 'refs')


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, 'üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>\n\n'\
                     '–ë–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å –æ—Ç—á–µ—Ç –ø–æ –∫—É—Ä—Å–æ–≤–æ–º—É –ø—Ä–æ–µ–∫—Ç—É, <b>–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è—è –≤—Å–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é.</b>'\
                     '–í –∫–æ–Ω—Ü–µ —Ä–∞–±–æ—Ç—ã –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤–∞—à pdf-—Ñ–∞–π–ª\n\n'
                     '–ü–µ—Ä–µ–¥ —Ä–∞–±–æ—Ç–æ–π —Å –±–æ—Ç–æ–º, —Å–æ–≤–µ—Ç—É–µ–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é: '\
                     r'https://docs.google.com/document/d/1Mjhw5jVO1bv-XD1PrSyE2nhg8F-z1W9b/edit', parse_mode='HTML')
    
    bot.send_message(message.chat.id, '‚ÑπÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã:</b> \n\n'\
                     '''/start - –ù–∞—á–∞—Ç—å
/makefile - –°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
/section - –î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É
/subsection - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–≥–ª–∞–≤—É
/subsubsection - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–æ–¥–≥–ª–∞–≤—É
/paragraph - –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ
/table - –î–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
/list - –î–æ–±–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫
/math - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ
/cite - –î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—é
/next - –ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞''', parse_mode='HTML')
    
    bot.send_message(message.chat.id, 'üìù –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ.\n\n'\
                     '–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∂–∏—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç, –∫—É—Ä—Å–∏–≤, –∑–∞—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ –∏–∑ Telegram')
    
    bot.send_message(message.chat.id, 'üñº –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ\n\n'
                     '‚ùóÔ∏è –í –¥–µ—Å–∫—Ç–æ–ø–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –ø—É–Ω–∫—Ç <b>—Å–∂–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</b>', parse_mode='HTML')
    
    bot.send_message(message.chat.id, 'üñä –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ <b>–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –æ—Ç—á–µ—Ç–∞</b>, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /makefile', parse_mode='HTML')

@bot.message_handler(commands=['makefile'])
def makefile(message):
    users["{0}".format(message.chat.id)] = UserInfo2()
    add_dirs(message)
    
    bot.send_message(message.chat.id, '‚ö†Ô∏è –°–µ–π—á–∞—Å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞')
    bot.send_message(message.chat.id, 
    '<b>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞:</b>\n'\
    '‚óΩÔ∏è –ò–º—è —Ñ–∞–π–ª–∞: your_file\n'\
    '‚óΩÔ∏è –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: A4\n'\
    '‚óΩÔ∏è –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞: 12 –ø—Ç\n'\
    '‚óΩÔ∏è –ü–æ–ª—è:\n'\
        '    ‚ñ´Ô∏è –õ–µ–≤–æ–µ: 25 –º–º\n'\
        '    ‚ñ´Ô∏è –ü—Ä–∞–≤–æ–µ: 10 –º–º\n'\
        '    ‚ñ´Ô∏è –í–µ—Ä—Ö–Ω–µ–µ: 20 –º–º\n'\
        '    ‚ñ´Ô∏è –ù–∏–∂–Ω–µ–µ: 20 –º–º\n',
        parse_mode='HTML')

    bot.send_message(message.chat.id, '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, is_change)

def is_change(message):
    if message.text == '–î–∞':
        kb = types.InlineKeyboardMarkup(row_width=1)
        btn1 = types.InlineKeyboardButton(text='–ò–º—è —Ñ–∞–π–ª–∞', callback_data='doc_name')
        btn2 = types.InlineKeyboardButton(text='–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞', callback_data='doc_font_size')
        btn3 = types.InlineKeyboardButton(text='–ü–æ–ª—è', callback_data='doc_geometry')
        kb.add(btn1, btn2, btn3)

        bot.send_message(message.chat.id, '...', reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å', reply_markup=kb)
    elif message.text == '–ù–µ—Ç':
        bot.send_message(message.chat.id, '‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–∏—Ç—É–ª—å–Ω–æ–≥–æ –ª–∏—Å—Ç–∞', reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id,
                      '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –§–ò–û —Å—Ç—É–¥–µ–Ω—Ç–∞\n\n'\
                      '–í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <i>–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ</i>', parse_mode='HTML')
        bot.register_next_step_handler(message, set_title_student)
    else:
        bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ')
        bot.send_message(message.chat.id, '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã?', reply_markup=start_reply_kb())
        bot.register_next_step_handler(message, is_change)

def set_title_student(message):
    users["{0}".format(message.chat.id)].student_ = message.text
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞', reply_markup=type_reply_kb())
    bot.register_next_step_handler(message, set_title_type)

def set_title_type(message):
    if message.text == '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π':
        users["{0}".format(message.chat.id)].type_ = '–± –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º'
    elif message.text == '–ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π':
        users["{0}".format(message.chat.id)].type_ = ' –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º'
    else:
        bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ')
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞', reply_markup=type_reply_kb())
        bot.register_next_step_handler(message, set_title_type) 

    if message.text == '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π' or message.text == '–ü—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π':
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, set_title_topic)

def set_title_topic(message):
    users["{0}".format(message.chat.id)].topic_ = only_quots(message.text)
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã')
    bot.register_next_step_handler(message, set_title_group)

def set_title_group(message):
    users["{0}".format(message.chat.id)].group_ = message.text
    bot.send_message(message.chat.id,
                      '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –ø—Ä–æ–µ–∫—Ç–∞\n\n'\
                      '–í–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: <i>–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ</i>', parse_mode='HTML')
    bot.register_next_step_handler(message, set_title_assistant)

def set_title_assistant(message):
    users["{0}".format(message.chat.id)].assistant_ = message.text
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è')
    bot.register_next_step_handler(message, set_title_post)

def set_title_post(message):
    users["{0}".format(message.chat.id)].post_ = message.text
    bot.send_message(message.chat.id,
                      '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã –≤–∞—à–µ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ\n\n'\
                      '–ù–∞–ø—Ä–∏–º–µ—Ä: –§–∞–∫—É–ª—å—Ç–µ—Ç–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –Ω–∞—É–∫ –ù–ò–£ –í–®–≠')
    bot.register_next_step_handler(message, set_title_work)

def set_title_work(message):
    users["{0}".format(message.chat.id)].work_ = message.text
    set_title(
              title_name=users["{0}".format(message.chat.id)].title_name_,
              type = users["{0}".format(message.chat.id)].type_,
              topic=users["{0}".format(message.chat.id)].topic_,
              student=users["{0}".format(message.chat.id)].student_,
              group=users["{0}".format(message.chat.id)].group_,
              assistant=users["{0}".format(message.chat.id)].assistant_,
              post=users["{0}".format(message.chat.id)].post_,
              work=users["{0}".format(message.chat.id)].work_)
    
    bot.send_message(message.chat.id, '‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏–∏')
    bot_add_bib(message)

def set_annot(message):
    users["{0}".format(message.chat.id)].next = set_key_words

    users["{0}".format(message.chat.id)].document_ = set_tex_document(users["{0}".format(message.chat.id)])
    add_tex_packages(users["{0}".format(message.chat.id)].document_)
    add_tex_preamble(users["{0}".format(message.chat.id)].document_)
    add_tex_title(users["{0}".format(message.chat.id)].document_, 'title')
    add_tex_table_of_contents(users["{0}".format(message.chat.id)].document_)

    users["{0}".format(message.chat.id)].annotation_ = add_tex_annotation(users["{0}".format(message.chat.id)].document_)

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏')
    bot.send_message(message.chat.id, 'ü™Ñ –ß—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç —Å –Ω–æ–≤–æ–≥–æ –∞–±–∑–∞—Ü–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /paragraph\n\n'\
                     'ü™Ñ –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /next')
    
def set_key_words(message):
    users["{0}".format(message.chat.id)].next = None
    bot.send_message(message.chat.id, '‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å <b><i>–°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤</i></b>', parse_mode='HTML')
    bot.send_message(message.chat.id, 
                     '‚ùî <b><i>–ü–æ–¥—Å–∫–∞–∑–∫–∞</i></b>\n\n'\
                     '5-10 —Å–ª–æ–≤ –∏–ª–∏ —Ñ—Ä–∞–∑, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–∏—Ö —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ '\
                     '(–Ω–∞ —Ç–æ–º –∂–µ —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—Å–∞–Ω —Ç–µ–∫—Å—Ç —Ä–∞–±–æ—Ç—ã)', parse_mode='HTML')
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é —Å –ø—Ä–æ–±–µ–ª–æ–º\n\n'\
                     '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>–ì–ª—É–±–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ, —Ä–∞–∑—Ä–µ–∂–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π, —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã–µ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏</i>', parse_mode='HTML')
    bot.register_next_step_handler(message, set_intro)

def set_intro(message):
    users["{0}".format(message.chat.id)].next = None
    add_tex_key_words(users["{0}".format(message.chat.id)].document_, message.text)

    bot.send_message(message.chat.id, '‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å <b><i>–í–≤–µ–¥–µ–Ω–∏–µ</i></b>', parse_mode='HTML')
    bot.send_message(message.chat.id, 
                     '‚ùî <b><i>–ü–æ–¥—Å–∫–∞–∑–∫–∞</i></b>\n\n'\
                     '–ü–æ —Å–º—ã—Å–ª—É, —ç—Ç–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–µ –≤–≤–µ–¥–µ–Ω–∏–µ '\
                     '–≤ —Ä–∞–±–æ—Ç—É –∏ –ø–µ—Ä–µ—Å–∫–∞–∑ —Ä–∞–±–æ—Ç—ã –¥–ª–∏–Ω–æ–π 1-2 —Å—Ç—Ä–∞–Ω–∏—Ü—ã. '\
                     '–í –≤–≤–µ–¥–µ–Ω–∏–∏ –æ–±—ã—á–Ω–æ –¥–∞–µ—Ç—Å—è –æ–ø–∏—Å–∞–Ω–∏–µ <i>–ø—Ä–µ–¥–º–µ—Ç–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏</i>, '\
                     '–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç—Å—è <i>–ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏</i>, –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è '\
                     '–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∑–Ω–∞—á–∏–º–æ—Å—Ç—å, –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ –æ–ø–∏—Å—ã–≤–∞—é—Ç—Å—è '\
                     '<i>–æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã</i>, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏—Ö –Ω–æ–≤–∏–∑–Ω–∞ –∏ –∑–Ω–∞—á–∏–º–æ—Å—Ç—å. '\
                     '–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –∫–æ–Ω—Ü–µ –≤–≤–µ–¥–µ–Ω–∏—è —Å—Ç–æ–∏—Ç –æ–ø–∏—Å–∞—Ç—å '\
                     '—Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–µ–ª–µ–Ω–∏—è –∑–∞–¥–∞—á –º–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞.', parse_mode='HTML')
    
    users["{0}".format(message.chat.id)].next = set_literature

    bot_add_section(message, '–í–≤–µ–¥–µ–Ω–∏–µ')
    bot.send_message(message.chat.id, '‚ö†Ô∏è –ù–∞—á–∏–Ω–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª')

def set_literature(message):
    users["{0}".format(message.chat.id)].next = bot_add_chapters

    bot.send_message(message.chat.id, '‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å <b><i>–û–±–∑–æ—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã</i></b>', parse_mode='HTML')
    bot.send_message(message.chat.id, 
                     '‚ùî <b><i>–ü–æ–¥—Å–∫–∞–∑–∫–∞</i></b>\n\n'\
                     '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç. –î–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞: –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥—Ä—É–≥–∏—Ö —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç (–∫ –ø—Ä–∏–º–µ—Ä—É: –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ —Ä–∞–±–æ—Ç—ã [1] –ø–æ—Ç–æ–º—É-—Ç–æ, –≤ —Ä–∞–±–æ—Ç–µ –∏—Å—Å–ª–µ–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–ª—É—á–∞–π, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –∏—Å—Å–ª–µ–¥—É–µ—Ç—Å—è –≤ [2] –∏ —Ç.–ø.). –î–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞: –æ–±–∑–æ—Ä –ø–æ—Ö–æ–∂–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, –∏—Ö —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ—á–µ–º—É –∏—Ö –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏. –û–±–∑–æ—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –Ω–µ –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å –∫–∞–∫ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç, –æ–Ω –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å –≤ —Å–µ–±—è –∞–Ω–∞–ª–∏–∑ —ç—Ç–∏—Ö —Ä–∞–±–æ—Ç –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à—É —Ä–∞–±–æ—Ç—É –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥—Ä—É–≥–∏—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞–±–æ—Ç.', parse_mode='HTML')

    bot_add_section(message, '–û–±–∑–æ—Ä –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã')
    bot.send_message(message.chat.id, '‚ö†Ô∏è –ù–∞—á–∏–Ω–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω—è—Ç—å —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª')


# Image adder
@bot.message_handler(content_types=['photo'])
def bot_set_image(message):
    photo_id = message.photo[-1].file_id
    file_photo = bot.get_file(photo_id)

    filedir_and_name, file_extencion = os.path.splitext(file_photo.file_path)
    downloaded_file_photo = bot.download_file(file_photo.file_path)

    filedir, filename = os.path.split(filedir_and_name)
    print(filedir)
    print(filename, file_extencion)
    src = os.path.join(users["{0}".format(message.chat.id)].graphics_path, filename + file_extencion)
    no_dir_src = filename + file_extencion
    with open(src, 'wb') as local_file:
        local_file.write(downloaded_file_photo)

    bot.send_message(message.chat.id, '‚ùî <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞</b>\n\n'\
                     '–í –æ–ø–∏—Å–∞–Ω–∏–∏ –ø–æ—è—Å–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏', parse_mode='HTML')
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>', parse_mode='HTML')
    bot.register_next_step_handler(message, bot_add_image, no_dir_src, filename)

def bot_add_image(message, path, label):
    add_image(users["{0}".format(message.chat.id)].document_, path, message.text, label_name=label)
    bot.send_message(message.chat.id, '‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ')

# Table adder
@bot.message_handler(commands=['table'])
def bot_set_table(message):
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Ä–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã</b> —á–µ—Ä–µ–∑ <b>–ø—Ä–æ–±–µ–ª</b>\n\n'\
                     '–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—É —Ä–∞–∑–º–µ—Ä–∞ 4 –Ω–∞ 5, –≤–≤–µ–¥–∏—Ç–µ <i>4 5</i>', parse_mode='HTML')
    
    bot.register_next_step_handler(message, bot_add_table)

def set_table_data(message, num_of_rows, num_of_columns, i, j):
    print(i, j)
    if i < num_of_rows:
        if j < num_of_columns:
            users["{0}".format(message.chat.id)].table_data[i][j] = message.text
            if i + 1 == num_of_rows and j + 1 == num_of_columns:
                bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã')
                bot.register_next_step_handler(message, set_table_caption, num_of_rows, num_of_columns)
                return
            if j + 1 == num_of_columns:
                bot.send_message(message.chat.id,
                      '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤\n'\
                      f'{i + 1 + 1} —Å—Ç—Ä–æ–∫—É, 1 —Å—Ç–æ–ª–±–µ—Ü')
            else:
                bot.send_message(message.chat.id,
                      '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤\n'\
                      f'{i + 1} —Å—Ç—Ä–æ–∫—É, {j + 1 + 1} —Å—Ç–æ–ª–±–µ—Ü')
            bot.register_next_step_handler(message, set_table_data, num_of_rows, num_of_columns, i, j + 1)
        else:
            set_table_data(message, num_of_rows, num_of_columns, i + 1, 0)
    else:
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã')
        bot.register_next_step_handler(message, set_table_caption, num_of_rows, num_of_columns)

def set_table_caption(message, num_of_rows, num_of_columns):
    add_table(users["{0}".format(message.chat.id)].document_, message.text, num_of_rows, num_of_columns, users["{0}".format(message.chat.id)].table_data)
    users["{0}".format(message.chat.id)].table_data.clear()
    bot.send_message(message.chat.id, '‚úÖ –¢–∞–±–ª–∏—Ü–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞')


def bot_add_table(message):
    rows, clmns = map(int, message.text.split())
    users["{0}".format(message.chat.id)].table_data = [['' for i in range(clmns)] for j in range(rows)]

    bot.send_message(message.chat.id,
                      '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤\n'\
                      '1 —Å—Ç—Ä–æ–∫—É, 1 —Å—Ç–æ–ª–±–µ—Ü')
    bot.register_next_step_handler(message, set_table_data, rows, clmns, 0, 0)

# List adder
@bot.message_handler(commands=['list'])
def bot_set_list(message):
    reply_kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(text='–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫')
    btn2 = types.KeyboardButton(text='–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ (—Å–ø–∏—Å–æ–∫ —Å —Ç–æ—á–∫–∞–º–∏)')
    reply_kb.add(btn1, btn2)

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–π —Å–ø–∏—Å–æ–∫ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å', reply_markup=reply_kb)
    bot.register_next_step_handler(message, bot_set_list_items)

def add_list_items(message, list_type):
    if message.text == '0':
        if list_type == 'enum':
            add_list_enumerate(users["{0}".format(message.chat.id)].document_, users["{0}".format(message.chat.id)].items)
            users["{0}".format(message.chat.id)].items.clear()
        elif list_type == 'itemize':
            add_list_itemize(users["{0}".format(message.chat.id)].document_, users["{0}".format(message.chat.id)].items)
            users["{0}".format(message.chat.id)].items.clear()

        bot.send_message(message.chat.id, '‚úÖ –°–ø–∏—Å–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
    else:
        users["{0}".format(message.chat.id)].items.append(message.text)
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞\n\n'\
                     '–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–≤–æ–¥, –≤–≤–µ–¥–∏—Ç–µ 0', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, add_list_items, list_type)

def bot_set_list_items(message):
    if message.text == '–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫':
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞\n\n'\
                     '–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–≤–æ–¥, –≤–≤–µ–¥–∏—Ç–µ 0', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, add_list_items, 'enum')
    elif message.text == '–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ (—Å–ø–∏—Å–æ–∫ —Å —Ç–æ—á–∫–∞–º–∏)':
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞\n\n'\
                     '–ß—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –≤–≤–æ–¥, –≤–≤–µ–¥–∏—Ç–µ 0', reply_markup=types.ReplyKeyboardRemove())
        bot.register_next_step_handler(message, add_list_items, 'itemize')
    else:
        print('hz')

# Math adder
@bot.message_handler(commands=['math'])
def bot_set_math(message):
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ\n\n'\
                     '–ù–∞–ø—Ä–∏–º–µ—Ä, <i>y = 5x^2 + 3</i>', parse_mode='HTML')
    
    bot.register_next_step_handler(message, bot_add_math)

def bot_add_math(message):
    add_math(users["{0}".format(message.chat.id)].document_, NoEscape(message.text))
    bot.send_message(message.chat.id, '‚úÖ –£—Ä–∞–≤–Ω–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ')

# Cite adder
def txt_arr_cites(message):
    result = ''
    for key in users["{0}".format(message.chat.id)].cites_:
        if not users["{0}".format(message.chat.id)].cites_[key].is_triggered:
            result += (key + '\n')

    return result

@bot.message_handler(commands=['cite'])
def bot_add_cite(message):
    if users["{0}".format(message.chat.id)].triggered_len > 0:
        bot.send_message(message.chat.id, '‚ÑπÔ∏è –í—ã –µ—â–µ –Ω–µ —Å–æ—Å–ª–∞–ª–∏—Å—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:\n\n{0}'.format(txt_arr_cites(message)))

    cites_reply_kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    for key in users["{0}".format(message.chat.id)].cites_:
        cites_reply_kb.add(types.KeyboardButton(text=key))

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è', reply_markup=cites_reply_kb)
    bot.register_next_step_handler(message, bot_cite_handler)

def bot_cite_handler(message):
    if message.text not in users["{0}".format(message.chat.id)].cites_:
        cites_reply_kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
        for key in users["{0}".format(message.chat.id)].cites_:
            cites_reply_kb.add(types.KeyboardButton(text=key))

        bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ!')
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è', reply_markup=cites_reply_kb)
        bot.register_next_step_handler(message, bot_cite_handler)

    add_cite(users["{0}".format(message.chat.id)].document_, message.text)
    users["{0}".format(message.chat.id)].cites_[message.text].is_triggered = True
    users["{0}".format(message.chat.id)].triggered_len -= 1
    bot.send_message(message.chat.id, f'‚úÖ –ë—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ {message.text}', reply_markup=types.ReplyKeyboardRemove())


def bot_add_chapters(message):
    users["{0}".format(message.chat.id)].next = bot_add_conclusion
    bot_send_hint_sections(message)
    bot_send_hint_subsections(message)
    bot_send_hint_subsubsections(message)
    bot.send_message(message.chat.id, '‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å <b><i>–≤–∞—à–∏ –≥–ª–∞–≤—ã</i></b>\n\n'\
                     '–í—ã—à–µ –±—ã–ª–∏ –¥–∞–Ω—ã —É–∫–∞–∑–∞–Ω–∏—è, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≥–ª–∞–≤—ã, –ø–æ–¥–≥–ª–∞–≤—ã –∏ –ø–æ–¥–ø–æ–¥–≥–ª–∞–≤—ã. '\
                     '–í—Å–µ —á—Ç–æ –≤—ã –≤–≤–µ–¥–µ—Ç–µ –ø–æ—Å–ª–µ –∫–æ–º–º–∞–Ω–¥—ã, –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å–µ–∫—Ü–∏—é.\n\n'\
                     '–ù–∞–ø—Ä–∏–º–µ—Ä –≤—ã –≤–≤–µ–¥–µ—Ç–µ /section, –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–≤–µ–¥–µ—Ç–µ –Ω–∞–∑—ã–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã.'\
                     '–ö–æ–º–º–∞–Ω–¥–∞ subsection, –¥–æ–±–∞–≤–∏—Ç –ø–æ–¥–≥–∞–≤—É —ç—Ç–æ–π –≥–ª–∞–≤—ã. –ï—Å–ª–∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–ª–∏ –ø—Ä–∏—à–ª–µ—Ç–µ '\
                     '–∫–∞—Ä—Ç–∏–Ω–∫—É, —Ç–æ –æ–Ω–∏ –¥–æ–±–∞–≤—è—Ç—Å—è –≤ —ç—Ç—É –ø–æ–¥–≥–ª–∞–≤—É.\n\n'\
                     '–ï—Å–ª–∏ –∂–µ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ, –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –ø–æ–¥–≥–ª–∞–≤—É –∏–ª–∏ –≥–ª–∞–≤—É, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã /subsection –∏–ª–∏ /section —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ\n\n', parse_mode='HTML')
    
    bot.send_message(message.chat.id, '‚ùî <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞</b>\n\n'\
                     '–ì–ª–∞–≤—ã (–æ–±—ã—á–Ω–æ –æ—Ç 2 –¥–æ 5). –ó–¥–µ—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∏–ª—å–Ω–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–µ–º—ã –ø—Ä–æ–µ–∫—Ç–∞.'\
                     '–ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–±–æ—Ç–∞, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∞—è –Ω–µ–∫–∏–π –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ —Ä–µ—à–µ–Ω–∏—è –∫–∞–∫–æ–π-—Ç–æ –∑–∞–¥–∞—á–∏, –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≥–ª–∞–≤—ã: —Ñ–æ—Ä–º–∞–ª—å–Ω–∞—è –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏ –∏ –∞–Ω–∞–ª–∏–∑ –µ–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π, –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–≥–æ –º–µ—Ç–æ–¥–∞, —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –º–µ—Ç–æ–¥–∞, —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏.\n\n'\
                     '–ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–±–æ—Ç–∞, –∏—Å—Å–ª–µ–¥—É—é—â–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –º–µ—Ç–æ–¥–∞ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á, –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≥–ª–∞–≤—ã: –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞, –æ–±–∑–æ—Ä –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–∞ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —ç—Ç–∏—Ö –∑–∞–¥–∞—á, –∞–Ω–∞–ª–∏–∑–æ–º –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –≤–∞—à–µ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è,  —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–∞ –∫ –∑–∞–¥–∞—á–µ 1 –≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏, —Ç–æ –∂–µ –¥–ª—è –∑–∞–¥–∞—á–∏ 2 –∏ —Ç.–¥. \n\n'\
                     '–ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–±–æ—Ç–∞, –ø–æ—Å–≤—è—â–µ–Ω–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏, –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –≥–ª–∞–≤—ã: –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π/–∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤/—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥—Ö–æ–¥–∞ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –∏ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫ –∫–∞—á–µ—Å—Ç–≤–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏ –µ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –∞–Ω–∞–ª–æ–≥–∞–º–∏. \n\n'\
                     '–ö–∞–∂–¥—É—é –≥–ª–∞–≤—É, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ, —Å—Ç–æ–∏—Ç –∑–∞–≤–µ—Ä—à–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–º –∑–∞–∫–ª—é—á–µ–Ω–∏–µ–º —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –≤—ã–≤–æ–¥–∞–º–∏. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤—ã–¥–µ–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ–∫—É—â–µ–π –≥–ª–∞–≤—ã –∏ –ø–ª–∞–≤–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–π –≥–ª–∞–≤–µ.',
                     parse_mode='HTML')
    bot.send_message(message.chat.id, '‚ö†Ô∏è –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É <b>–ó–∞–∫–ª—é—á–µ–Ω–∏–µ</b>, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–º–∞–Ω–¥–æ–π /next', parse_mode='HTML')

def bot_add_conclusion(message):
    users["{0}".format(message.chat.id)].next = bot_set_bib
    bot.send_message(message.chat.id, '‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å <b><i>–∑–∞–∫–ª—é—á–µ–Ω–∏–µ</i></b>\n\n', parse_mode='HTML')
    bot.send_message(message.chat.id, '‚ùî <b>–ü–æ–¥—Å–∫–∞–∑–∫–∞</b>\n\n'\
                     '–ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã (–∫–∞–∫ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö, —Ç–∞–∫ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö, –µ—Å–ª–∏ —Ç–∞–∫–æ–≤—ã–µ –µ—Å—Ç—å), –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –¥–∞–ª—å–Ω–µ–π—à–µ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. ', parse_mode='HTML')
    bot_add_section(message, '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ')
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è')

def bot_set_bib(message):
    add_tex_literature(users["{0}".format(message.chat.id)].document_)
    end_doc(message)

# End document
def end_doc(message):
    bot.send_message(message.chat.id, '‚úÖ <b>–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∑–∞–∫–æ–Ω—á–µ–Ω–æ!</b>', parse_mode='HTML')
    bot.send_message(message.chat.id, '‚è≥ <b>–í–∞—à —Ñ–∞–π–ª...</b>', parse_mode='HTML')

    users["{0}".format(message.chat.id)].document_.generate_tex(os.path.join(users["{0}".format(message.chat.id)].path, 'your_file'))
    compile_tex(message)

    bot.send_document(message.chat.id, open(os.path.join(users["{0}".format(message.chat.id)].path, 'your_file.pdf'), 'rb'))
    shutil.rmtree(users["{0}".format(message.chat.id)].path)
    bot.send_message(message.chat.id, 'üñä –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –Ω–æ–≤–æ–º—É <b>–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –æ—Ç—á–µ—Ç–∞</b>, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /makefile', parse_mode='HTML')


def compile_tex(message):
    os.chdir(users["{0}".format(message.chat.id)].path)
    os.system('pdflatex ' + 'your_file')

    os.system('biber ' + 'your_file')

    os.system('pdflatex ' + 'your_file')
    os.system('pdflatex ' + 'your_file')
    os.system('pdflatex ' + 'your_file')

    os.chdir('../../')

# Section adder
def bot_add_section(message, title):
    if title == None:
        title = message.text
    bot.send_message(message.chat.id, f'‚úÖ –ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω —Ä–∞–∑–¥–µ–ª {title}')
    add_tex_section(users["{0}".format(message.chat.id)].document_, title)

@bot.message_handler(commands=['section'])
def bot_new_sect(message):
    bot_send_hint_sections(message)
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ä–∞–∑–¥–µ–ª–∞')
    bot.register_next_step_handler(message, bot_add_section, None)


# Subsection adder
def bot_add_subsection(message, title):
    if title == None:
        title = message.text
    bot.send_message(message.chat.id, f'‚úÖ –ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–¥—Ä–∞–∑–¥–µ–ª {title}')
    add_tex_subsection(users["{0}".format(message.chat.id)].document_, title)

@bot.message_handler(commands=['subsection'])
def bot_new_subsect(message):
    bot_send_hint_subsections(message)
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞')
    bot.register_next_step_handler(message, bot_add_subsection, None)


# Subsubsection adder
def bot_add_subsubsection(message, title):
    if title == None:
        title = message.text
    bot.send_message(message.chat.id, f'‚úÖ –ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–¥–ø–æ–¥—Ä–∞–∑–¥–µ–ª {title}')
    add_tex_subsubsection(users["{0}".format(message.chat.id)].document_, title)

@bot.message_handler(commands=['subsubsection'])
def bot_new_subsubsect(message):
    bot_send_hint_subsubsections(message)
    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–¥–ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞')
    bot.register_next_step_handler(message, bot_add_subsubsection, None)


# Next adder
@bot.message_handler(commands=['next'])
def bot_next(message):
    bot.send_message(message.chat.id, '‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø–æ–ª–µ–Ω–∏—é —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑–¥–µ–ª–∞')
    users["{0}".format(message.chat.id)].next(message)


# Paragraph adder
@bot.message_handler(commands=['paragraph'])
def bot_new_par(message):
    bot.send_message(message.chat.id, '‚úÖ –ë—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–∞—Ä–∞–≥—Ä–∞—Ñ')
    add_paragraph(users["{0}".format(message.chat.id)].document_)

# Text adder
@bot.message_handler(content_types=['text'])
def bot_add_text(message):
    
    add_text(users["{0}".format(message.chat.id)].document_, only_quots(ent2latex(message)))
    bot.send_message(message.chat.id, '‚úÖ –¢–µ–∫—Å—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω')
    bot_send_hint_text(message)

def bot_gen_tex(message):
    bot.send_message(message.chat.id, '–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω tex-—Ñ–∞–π–ª')
    users["{0}".format(message.chat.id)].document_.generate_tex('simpletex')


# Hint adders
def bot_send_hint_sections(message):
    bot.send_message(message.chat.id, 'ü™Ñ –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–¥–µ–ª –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /section\n\n'\
                     '–í—Å–µ, —á—Ç–æ –≤—ã –≤–≤–µ–¥–µ—Ç–µ –ø–æ—Å–ª–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª (–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –ø–æ—Å–µ–∫—Ü–∏–∏ –∏ –ø–æ–¥–ø–æ–¥—Å–µ–∫—Ü–∏–∏)\n\n'\
                     'ü™Ñ –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /next')
    
def bot_send_hint_subsections(message):
    bot.send_message(message.chat.id, 'ü™Ñ –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Ä–∞–∑–¥–µ–ª –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /subsection\n\n'\
                     '–í—Å–µ, —á—Ç–æ –≤—ã –≤–≤–µ–¥–µ—Ç–µ –ø–æ—Å–ª–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª (–≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –ø–æ–¥–ø–æ–¥—Å–µ–∫—Ü–∏–∏)\n\n'\
                     'ü™Ñ –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /next')
    
def bot_send_hint_subsubsections(message):
    bot.send_message(message.chat.id, 'ü™Ñ –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–æ–¥—Ä–∞–∑–¥–µ–ª –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /subsubsection\n\n'\
                     '–í—Å–µ, —á—Ç–æ –≤—ã –≤–≤–µ–¥–µ—Ç–µ –ø–æ—Å–ª–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª\n\n'\
                     'ü™Ñ –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /next')

def bot_send_hint_text(message):
    bot.send_message(message.chat.id, 'ü™Ñ –ß—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç —Å –Ω–æ–≤–æ–≥–æ –∞–±–∑–∞—Ü–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /paragraph\n\n'\
                     'ü™Ñ –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /next')


# -------------------------------------------------------------------------------------------------------------------------------------------

def bib_inline_kb():
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text='üåê –û–Ω–ª–∞–π–Ω –∏—Å—Ç–æ—á–Ω–∏–∫', callback_data='online')
    btn2 = types.InlineKeyboardButton(text='üìö –ö–Ω–∏–≥–∞', callback_data='book')
    btn3 = types.InlineKeyboardButton(text='üìñ –ì–ª–∞–≤–∞ –∏–∑ –∫–Ω–∏–≥–∏', callback_data='inbook')
    btn4 = types.InlineKeyboardButton(text='üßæ –°—Ç–∞—Ç—å—è', callback_data='article')
    btn5 = types.InlineKeyboardButton(text='üî¨ –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è', callback_data='inproceedings')
    kb.add(btn1, btn2, btn3, btn4, row_width=1)

    return kb

# @bot.callback_query_handler(func=lambda callback: callback.data)
# def check_choice(callback):
#     bot.send_message(callback.message.chat.id, 'üìç –ü—Ä–∏—Å—Ç—É–ø–∏–º –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏–∏')
#     if callback.data == 'online':
#         users["{0}".format(message.chat.id)].bib_refs.append(BibOnline())
#     elif callback.data == 'book':
#         users["{0}".format(message.chat.id)].bib_refs.append(BibBook())
#     elif callback.data == 'inbook':
#         users["{0}".format(message.chat.id)].bib_refs.append(BibInbook())
#     elif callback.data == 'article':
#         users["{0}".format(message.chat.id)].bib_refs.append(BibArticle())

#     curr_bib = users["{0}".format(message.chat.id)].bib_refs[-1]

#     bot.send_message(callback.message.chat.id, 
#                          '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ</b> –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (–Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)\n\n'\
#                          '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>chirkova18_arxiv</i>', parse_mode='HTML')
#     bot.register_next_step_handler(callback.message, bib_set_label, curr_bib)

# Bib adders
def bib_set_label(message, bib_ref):
    bib_ref.label = message.text.lower()

    bot.send_message(message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–ê–≤—Ç–æ—Ä–∞</b>\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>Nadezhda Chirkova</i> –∏–ª–∏ <i>Donald E. Knuth</i>\n'\
                         '–ï—Å–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ –Ω–µ—Ç, –≤–≤–µ–¥–∏—Ç–µ 0\n', 
                         parse_mode='HTML')
    bot.register_next_step_handler(message, bib_set_author, bib_ref)

def bib_set_author(message, bib_ref):
    if message.text != '0':
        bib_ref.author = message.text
    else:
        bib_ref.author = ''

    bot.send_message(message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ</b>\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>Knuth: Computers and Typesetting</i>', 
                         parse_mode='HTML')
    bot.register_next_step_handler(message, bib_set_title, bib_ref)

def bib_set_title(message, bib_ref):
    bib_ref.title = message.text

    if isinstance(bib_ref, BibOnline):
        bot.send_message(message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–°—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª</b>\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>http://www-cs-faculty.stanford.edu/~uno/abcde.html</i>', 
                         parse_mode='HTML')
        bot.register_next_step_handler(message, bib_set_url, bib_ref)
    elif isinstance(bib_ref, BibBook) or isinstance(bib_ref, BibInbook):
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–ò–∑–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ</b>\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>Addison-Wesley</i>', 
                         parse_mode='HTML')
        bot.register_next_step_handler(message, bib_set_publisher, bib_ref)
    elif isinstance(bib_ref, BibArticle):
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞</b>\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>1968</i>', 
                         parse_mode='HTML')
        bot.register_next_step_handler(message, bib_set_year, bib_ref)

def bib_set_publisher(message, bib_ref):
    bib_ref.publisher = message.text

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞</b>\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>1968</i>', 
                         parse_mode='HTML')
    bot.register_next_step_handler(message, bib_set_year, bib_ref)

def bib_set_year(message, bib_ref):
    bib_ref.year = message.text

    if isinstance(bib_ref, BibBook):
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>—Å–µ—Ä–∏—é –∫–Ω–∏–≥–∏</b>\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>Four volumes</i>\n\n'\
                         '–ï—Å–ª–∏ —Ç–∞–∫–æ–π –Ω–µ—Ç, –≤–≤–µ–¥–∏—Ç–µ 0', 
                         parse_mode='HTML')
        bot.register_next_step_handler(message, bib_set_series, bib_ref)
    elif isinstance(bib_ref, BibInbook):
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä –≥–ª–∞–≤—ã</b>, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>1.2</i>\n\n',
                         parse_mode='HTML')
        bot.register_next_step_handler(message, bib_set_chapter, bib_ref)
    elif isinstance(bib_ref, BibArticle):
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞</b>, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª–∞—Å—å —Å—Ç–∞—Ç—å—è\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>TUGBoat</i>\n\n',
                         parse_mode='HTML')
        bot.register_next_step_handler(message, bib_set_journal, bib_ref)

def bib_set_journal(message, bib_ref):
    bib_ref.journal = message.text

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–æ–±—â–∏–π –Ω–æ–º–µ—Ä –≤—ã–ø—É—Å–∫–∞</b> –∂—É—Ä–Ω–∞–ª–∞ (Volume.), –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª–∞—Å—å —Å—Ç–∞—Ç—å—è\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä, Vol.59 No.4 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ —á–µ—Ç–≤–µ—Ä—Ç—ã–π –≤—ã–ø—É—Å–∫ –∂—É—Ä–Ω–∞–ª–∞ –∑–∞ –≥–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –æ–±—â–∏–π –Ω–æ–º–µ—Ä 59.\n\n',
                         parse_mode='HTML')
    bot.register_next_step_handler(message, bib_set_volume, bib_ref)

def bib_set_volume(message, bib_ref):
    bib_ref.volume = message.text

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä –≤—ã–ø—É—Å–∫–∞</b> –∂—É—Ä–Ω–∞–ª–∞ –∑–∞ <b>–≥–æ–¥</b> (No.), –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª–∞—Å—å —Å—Ç–∞—Ç—å—è\n\n'\
                         '–ù–∞–ø—Ä–∏–º–µ—Ä, Vol.59 No.4 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ —á–µ—Ç–≤–µ—Ä—Ç—ã–π –≤—ã–ø—É—Å–∫ –∂—É—Ä–Ω–∞–ª–∞ –∑–∞ –≥–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –æ–±—â–∏–π –Ω–æ–º–µ—Ä 59.\n\n',
                         parse_mode='HTML')
    bot.register_next_step_handler(message, bib_set_number, bib_ref)

def bib_set_number(message, bib_ref):
    bib_ref.number = message.text

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü</b>, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è\n\n'\
                         '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü —á–µ—Ä–µ–∑ --, –Ω–∞–ø—Ä–∏–º–µ—Ä <i>342--351</i>',
                         parse_mode='HTML')
    bot.register_next_step_handler(message, bib_set_pages, bib_ref)

def bib_set_pages(message, bib_ref):
    bib_ref.pages = message.text


    users["{0}".format(message.chat.id)].cites_[bib_ref.label] = bib_ref
    bib_add_article(users["{0}".format(message.chat.id)].bib_, bib_ref)

    bot.send_message(message.chat.id, '‚úÖ –ó–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∂—É—Ä–Ω–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç—å–∏')
    bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, bib_is_change)

def bib_set_chapter(message, bib_ref):
    bib_ref.chapter = message.text

    users["{0}".format(message.chat.id)].cites_[bib_ref.label] = bib_ref
    bib_add_inbook(users["{0}".format(message.chat.id)].bib_, bib_ref)

    bot.send_message(message.chat.id, '‚úÖ –ó–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–ª–∞–≤—ã –∏–∑ –∫–Ω–∏–≥–∏')
    bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, bib_is_change)

def bib_set_series(message, bib_ref):
    if message.text != '0':
        bib_ref.series = message.text
    else:
        bib_ref.series = ''

    users["{0}".format(message.chat.id)].cites_[bib_ref.label] = bib_ref
    bib_add_book(users["{0}".format(message.chat.id)].bib_, bib_ref)

    bot.send_message(message.chat.id, '‚úÖ –ó–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–∏–≥–∏')
    bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, bib_is_change)

def bib_set_url(message, bib_ref):
    bib_ref.url = message.text

    bot.send_message(message.chat.id, 
                         '‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ <b>–î–∞—Ç—É –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∏—Å—Ç–æ—á–Ω–∏–∫—É</b>\n\n'\
                         '–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ì–û–î-–ú–ï–°–Ø–¶-–î–ï–ù–¨\n\n'
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: <i>2013-05-16</i>', 
                         parse_mode='HTML')
        
    bot.register_next_step_handler(message, bib_set_urldate, bib_ref)

def bib_set_urldate(message, bib_ref):
    bib_ref.urldate = message.text

    users["{0}".format(message.chat.id)].cites_[bib_ref.label] = bib_ref
    bib_add_online(users["{0}".format(message.chat.id)].bib_, bib_ref)

    bot.send_message(message.chat.id, '‚úÖ –ó–∞–ø–æ–ª–Ω–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–Ω–ª–∞–π–Ω –∏—Å—Ç–æ—á–Ω–∏–∫–∞')
    bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫?', reply_markup=start_reply_kb())
    bot.register_next_step_handler(message, bib_is_change)

def bib_is_change(message):
    if message.text == '–î–∞':
        bot.send_message(message.chat.id, '...', reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–π —Ç–∏–ø –∫–∞–∫–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è', 
                         reply_markup=bib_inline_kb())
    elif message.text == '–ù–µ—Ç':
        users["{0}".format(message.chat.id)].bib_.close()
        users["{0}".format(message.chat.id)].triggered_len = len(users["{0}".format(message.chat.id)].cites_)
        bot.send_message(message.chat.id, '.bib —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω')

        bot.send_message(message.chat.id, '‚úÖ –ó–∞–ø–æ–ª–Ω–∏–ª–∏ –±–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—é', reply_markup=types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id, '‚úÖ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞')
        bot.send_message(message.chat.id, '‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å <b><i>–ê–Ω–Ω–æ—Ç–∞—Ü–∏—é</i></b>', parse_mode='HTML')
        bot.send_message(message.chat.id, 
                     '‚ùî <b><i>–ü–æ–¥—Å–∫–∞–∑–∫–∞</i></b>\n\n'\
                     '–ü–æ —Å–º—ã—Å–ª—É, –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è —ç—Ç–æ –æ—á–µ–Ω—å –∫—Ä–∞—Ç–∫–∏–π –ø–µ—Ä–µ—Å–∫–∞–∑ –≤–∞—à–µ–π —Ä–∞–±–æ—Ç—ã, '\
                     '–∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–æ—Å–æ–±–µ–Ω –ø–æ–Ω—è—Ç—å, '\
                     '—á—Ç–æ –≤—ã –¥–µ–ª–∞–ª–∏ –∏–¥–µ–π–Ω–æ. –û–Ω–∞ –æ–±—ã—á–Ω–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–¥–∞—á–∏ '\
                     '–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã –≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–µ.\n\n'\
                     '<i>–û–±—ä–µ–º –¥–æ 2000 –∑–Ω–∞–∫–æ–≤</i>', parse_mode='HTML')
        set_annot(message)

    else:
        bot.send_message(message.chat.id, '‚ùóÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ')
        bot.send_message(message.chat.id, '–¢—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –µ—â–µ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫?', reply_markup=start_reply_kb())
        bot.register_next_step_handler(message, bib_is_change)
    
def bot_add_bib(message):
    users["{0}".format(message.chat.id)].bib_ = make_bib_file(users["{0}".format(message.chat.id)].bib_path)
    bot.send_message(message.chat.id, '‚ÑπÔ∏è –¢–µ–ø–µ—Ä—å –≤–∞–º –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –∑–∞–ø–æ–ª–Ω–∏—Ç—å <b><i>–ë–∏–±–ª–∏–æ–≥—Ä–∞—Ñ–∏—é</i></b>', parse_mode='HTML')

    bot.send_message(message.chat.id, '‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ –∫–∞–∫–æ–π —Ç–∏–ø –∫–∞–∫–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Å–ª–∞—Ç—å—Å—è', reply_markup=bib_inline_kb())


bot.polling()
